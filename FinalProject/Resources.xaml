<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:m="clr-namespace:Microsoft.Phone.Controls.Maps;assembly=Microsoft.Phone.Controls.Maps"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"    
	xmlns:converters="clr-namespace:GPS"
	xmlns:controls="clr-namespace:GPS"
    xmlns:localConverters="clr-namespace:GPS.Converters" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d">




    <localConverters:StringMatchToVisibleConverter x:Key="StringMatchToVisibleConverter" />
    <localConverters:AngleToRenderTransform x:Key="AngleToRenderTransform" />
    <localConverters:BytesToKBytesConverter x:Key="BytesToKBytesConverter" />

    <sys:Double x:Key="FunctionTileSize">200</sys:Double>

    <Style x:Key="FunctionTileStyle" TargetType="Button">
        <Setter Property="Width" Value="{StaticResource FunctionTileSize}" />
        <Setter Property="Height" Value="{StaticResource FunctionTileSize}" />
    </Style>



    <!-- #Converters -->
	<converters:LocationConverter x:Key="locationConverter" />
	<converters:ItineraryTextConverter x:Key="ItineraryTextConverter" />
	<converters:TotalSecondsConverter x:Key="seconds" />
	<converters:KilometersConverter x:Key="kilometers" />
	<!-- #Brushes -->
	<SolidColorBrush x:Key="ControlBackgroundBrush" Color="#A52E2E2E" />
	<SolidColorBrush x:Key="DirectionBackgroundBrush" Color="Black" />

	<SolidColorBrush x:Key="PushpinBicycleBrush" Color="#FF593D00" />
	<SolidColorBrush x:Key="PushpinCarBrush" Color="#FFEC098D" />
	<SolidColorBrush x:Key="PushpinDrinkBrush" Color="#FFD21242" />
	<SolidColorBrush x:Key="PushpinFuelBrush" Color="#FFF47836" />
	<SolidColorBrush x:Key="PushpinHouseBrush" Color="#FF00AFDB" />
	<SolidColorBrush x:Key="PushpinLocationBrush" Color="#FF3784DF" />
	<SolidColorBrush x:Key="PushpinRestaurantBrush" Color="#FF7D4199" />
	<SolidColorBrush x:Key="PushpinShopBrush" Color="#FF00B25A" />

	<Style TargetType="m:Pushpin" x:Key="PushpinStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="34" Height="34" >
						<StackPanel Orientation="Vertical" >
							<Grid MinHeight="31" MinWidth="29" Margin="0">
								<Ellipse Fill="#FFFF7F00"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="30"
							   Height="30"
							   Stroke="White"
							   StrokeThickness="3"/>
								<ContentPresenter HorizontalAlignment="Center"
												   Content="{TemplateBinding Content}"
												   ContentTemplate="{TemplateBinding ContentTemplate}"
												   Margin="4"/>
							</Grid>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Black" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>

	<Style TargetType="m:Pushpin" x:Key="Pin">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="34" Height="34" >
						<StackPanel Orientation="Vertical" >
							<Grid MinHeight="31" MinWidth="29" Margin="0">
								<Ellipse Fill="Blue"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="30"
							   Height="30"
							   Stroke="White"
							   StrokeThickness="3"/>
								<ContentPresenter HorizontalAlignment="Center"
												   Content="{TemplateBinding Content}"
												   ContentTemplate="{TemplateBinding ContentTemplate}"
												   Margin="4"/>
							</Grid>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>

	<Style TargetType="m:Pushpin" x:Key="CirlceStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="34" Height="34" >
						<StackPanel Orientation="Vertical" >
							<Grid MinHeight="31" MinWidth="29" Margin="0">
								<Ellipse Fill="Transparent"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="30"
							   Height="30"
							   Stroke="White"
							   StrokeThickness="3"/>
								<ContentPresenter HorizontalAlignment="Center"
												   Content="{TemplateBinding Content}"
												   ContentTemplate="{TemplateBinding ContentTemplate}"
												   Margin="4"/>
							</Grid>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>

	<!-- #Styles -->
  

	<Style x:Key="MapPoint" TargetType="Ellipse">
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="18"/>
		<Setter Property="Fill" Value="#FF003664"/>
		<Setter Property="Stroke" Value="AliceBlue"/>
	</Style>

	<Style x:Key="ItineraryPushpinStyle" TargetType="m:Pushpin">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid Height="20" Width="20">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="VisualStateGroup">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1">
										<VisualTransition.GeneratedEasingFunction>
											<PowerEase EasingMode="EaseIn"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
									<VisualTransition GeneratedDuration="0:0:0.1" To="Selected">
										<VisualTransition.GeneratedEasingFunction>
											<PowerEase EasingMode="EaseIn"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="UnSelected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#FFF08609" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse_Center" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ellipse_Center" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ellipse_Center" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse x:Name="ellipse" Style="{StaticResource MapPoint}" Width="20" Height="20" RenderTransformOrigin="0.5,0.5" Fill="White" Stroke="#FF2C76B7" StrokeThickness="3" >
							<Ellipse.RenderTransform>
								<CompositeTransform/>
							</Ellipse.RenderTransform>
						</Ellipse>
						<Ellipse x:Name="ellipse_Center" Style="{StaticResource MapPoint}" Width="8" Height="8" RenderTransformOrigin="0.5,0.5" Fill="Black" Stroke="{x:Null}" StrokeThickness="2" >
							<Ellipse.RenderTransform>
								<CompositeTransform/>
							</Ellipse.RenderTransform>
						</Ellipse>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ButtonZoomInStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
		<Setter Property="Padding" Value="10,3,10,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent" Width="48" Height="48">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ButtonBackground">
							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid Height="48" Width="48" HorizontalAlignment="Center" VerticalAlignment="Center">
									<Image x:Name="image" Source="/UsingBingMaps;component/Resources/Icons/Zoom/ZoomIn_Black.png" Stretch="Fill" Visibility="Collapsed"/>
									<Image x:Name="image1" Source="/UsingBingMaps;component/Resources/Icons/Zoom/ZoomIn_White.png" Stretch="Fill"/>
								</Grid>
							</ContentControl>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ButtonZoomOutStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
		<Setter Property="Padding" Value="10,3,10,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent" Width="48" Height="48">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ButtonBackground">
							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center" VerticalAlignment="Center">
								<Grid Height="48" Width="48" HorizontalAlignment="Center" VerticalAlignment="Center">
									<Image x:Name="image1" Source="/UsingBingMaps;component/Resources/Icons/Zoom/ZoomOut_White.png" Stretch="Fill"/>
									<Image x:Name="image" Source="/UsingBingMaps;component/Resources/Icons/Zoom/ZoomOut_Black.png" Stretch="Fill" Visibility="Collapsed"/>
								</Grid>
							</ContentControl>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ButtonGoStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
		<Setter Property="Padding" Value="10,3,10,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}" HorizontalAlignment="Center" VerticalAlignment="Center">
							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<Grid>
									<Image x:Name="image" HorizontalAlignment="Right" Height="48" Source="/GPS;component/Images/SearchBlack.png" VerticalAlignment="Bottom" Width="48" Stretch="Fill" Visibility="Collapsed" Opacity="0"/>
									<Image x:Name="image1" HorizontalAlignment="Right" Height="48" Source="/GPS;component/Images/SearchWhite.png" Stretch="Fill" VerticalAlignment="Bottom" Width="48"/>
								</Grid>
							</ContentControl>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
		<Setter Property="Padding" Value="10,3,10,5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
							<ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MapPointToggleButton" BasedOn="{StaticResource PhoneButtonBase}" TargetType="ToggleButton">
		<Setter Property="Padding" Value="8"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimation Duration="0" To="#FFED8000" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse x:Name="ellipse" Fill="#FF003664"  Stroke="White" Width="21" Height="21" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="m:Pushpin" x:Key="AlarmPin">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="40" Height="40" >
						<Ellipse Fill="Red"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="32"
							   Height="32"
							   Stroke="White"
							   StrokeThickness="3"/>
							<Image  Source="/Images/Mode.png/"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>
	<Style TargetType="m:Pushpin" x:Key="CarPin">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="40" Height="40" >
						<Ellipse Fill="Blue"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="32"
							   Height="32"
							   Stroke="White"
							   StrokeThickness="3"/>
						<Image  Source="/Images/PushpinCar.png/"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>
	<Style TargetType="m:Pushpin" x:Key="RingtonePin">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="m:Pushpin">
					<Grid x:Name="ContentGrid" Width="40" Height="40" >
						<Ellipse Fill="Green"
							   Margin="1"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Width="32"
							   Height="32"
							   Stroke="White"
							   StrokeThickness="3"/>
						<Image  Source="/Images/Location.png/"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="18" />
	</Style>
	<!-- Style for our metadata (like Index, Duration, ...) -->
	<Style TargetType="TextBlock" x:Key="ItineraryItemMetadata">
		<Setter Property="Opacity" Value="0.65" />
		<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeLarge}" />
		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
		<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
</ResourceDictionary>